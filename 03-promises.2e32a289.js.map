{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMO,EAAaC,SAAXC,OAERC,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBAQN,IANA,IAAMC,EAAQC,SAASC,KAAKC,SAASlB,MAAMmB,OACrCC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAEzCG,EAAeP,EAEVQ,EAAI,EAAGA,GAAKF,EAAQE,IAC3BzB,EAAcyB,EAAGD,GACdE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBO,EAAOmB,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAH,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBO,EAAOsB,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAG9DsB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst { Notify } = Notiflix;\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delay = parseInt(this.elements.delay.value);\n  const step = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n\n  let currentDelay = delay; \n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += step; \n  }\n});\n \n  "],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$Notify","Notiflix","Notify","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","this","elements","value","step","amount","currentDelay","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.2e32a289.js.map"}